version: '3.4'

services:
  # database:
  #   container_name: database
  #   image: mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: symfony
  #     MYSQL_USER: symfony
  #     MYSQL_PASSWORD: symfony
  #   ports:
  #     - "3307:3306"
  #   networks:
  #     - symfony
  ###> doctrine/doctrine-bundle ###
  db-postgres:
      # image: postgres:${POSTGRES_VERSION:-13}-alpine
      container_name: db-postgres
      build:
        context: ./docker/postgres
      environment:
      #  POSTGRES_DB: ${POSTGRES_DB:-symfony}
      #   #  You should definitely change the password in lubinproduction
      #  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      #  POSTGRES_USER: ${POSTGRES_USER:-root}
       - POSTGRES_DB=symfony
       - POSTGRES_PASSWORD=ChangeMe
       - POSTGRES_USER=symfony
       - PGDATA=/var/lib/postgresql/data/db
      ports:
        - "5432:5432"
      # volumes:
     #   - db-data:/var/lib/postgresql/data:rw
    # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
        # - ./docker/db/data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###
      # entrypoint: ["chown","-R", "postgres",  "/var/lib/postgresql/data"]
      networks:
        - symfony
  
   
  php:
    container_name: php
    build:
      context: ./docker/php
    restart: always
    ports:
      - '9000:9000'
      - '8000:8000'
      # - '1025:1025'
      # - '1080:1080'
    volumes:
      - .:/var/www/html
      - ./docker/db/data:/var/lib/postgresql/data:rw
    # entrypoint: ["chown","-R", "lukasz",  "/var/www/html"]
    networks:
      - symfony
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: always
    ports:
      - '8080:80'
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - symfony
  
  mailer:
    image: schickling/mailcatcher
    container_name: project_mail
    # environment:
    #   # - VIRTUAL_HOST=mail.project.docker
    #   - VIRTUAL_PORT=1080
    ports: 
      - '1025:1025' 
      - '1080:1080'
    networks:
      - symfony
###> blackfireio/blackfire-symfony-meta ###
  blackfire:
    image: blackfire/blackfire:2
    # uncomment to store Blackfire credentials in a local .env.local file
    #env_file: .env.local
    environment:
      BLACKFIRE_LOG_LEVEL: 4
    ports: 
      - '8307:8307'
    networks:
      - symfony
###< blackfireio/blackfire-symfony-meta ###
     
networks:
    symfony:
        driver: bridge  



      
volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
